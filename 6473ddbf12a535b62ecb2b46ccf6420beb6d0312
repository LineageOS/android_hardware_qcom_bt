{
  "comments": [
    {
      "key": {
        "uuid": "c3d21714_f27200e4",
        "filename": "libbt-vendor/src/bt_vendor_qcom.c",
        "patchSetId": 1
      },
      "lineNbr": 944,
      "author": {
        "id": 13897
      },
      "writtenOn": "2017-08-10T19:56:53Z",
      "side": 0,
      "message": "This seems overly complex. From a quick look, it seems that they want to parse the property and if the MAC has more than 6 colons, it updates q-\u003ebdaddr, but not vnd_local_bd_addr. If the MAC has 6 colons, it updates both, while it doesn\u0027t update neither of them if it has less than 6 colons. Why is there a different between the two cases? I should really look at the rest of the code, but maybe someone here already knows the answer.\n\nAlso, I think this can be simplified. For example, to update both the buffers when the length is correct:\n\n    tok \u003d strtok(bd_addr, \":\");\n    for (i \u003d 0; i \u003c 6 \u0026\u0026 tok; i++) {\n        local_bd_addr_from_prop[5 - i] \u003d strtol(tok, NULL, 16);\n        ALOGV(\"bd add [%d]: %ld \", i, local_bd_addr_from_prop[5 - i]);\n        tok \u003d strtok(NULL, \":\");\n    }\n\n    if (i \u003d\u003d 6 \u0026\u0026 !tok) {\n        memcpy(q-\u003ebdaddr, local_bd_addr_from_prop, sizeof(q-\u003ebdaddr));\n        memcpy(vnd_local_bd_addr, local_bd_addr_from_prop, sizeof(vnd_local_bd_addr));\n        ignore_boot_prop \u003d FALSE;\n    } else {\n        ALOGE(\"BD property of invalid length\");\n        ignore_boot_prop \u003d TRUE;\n    }",
      "range": {
        "startLine": 908,
        "startChar": 0,
        "endLine": 944,
        "endChar": 33
      },
      "revId": "6473ddbf12a535b62ecb2b46ccf6420beb6d0312",
      "serverId": "1ec6b3db-b2c1-4fa4-84a2-4c7efe89ba71",
      "unresolved": false
    }
  ]
}